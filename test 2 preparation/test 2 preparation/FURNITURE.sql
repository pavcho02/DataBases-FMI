--CREATE DATABASE FURNITURECOMPANYDB;


--CREATE TABLE CUSTOMER(
--ID INT PRIMARY KEY IDENTITY,
--NAME VARCHAR(50) NOT NULL,
--ADDRESS VARCHAR(50) NOT NULL,
--CITY VARCHAR(50) NOT NULL,
--CITY_CODE VARCHAR(10) NOT NULL
--);

--CREATE TABLE ORDER_T(
--ID INT PRIMARY KEY,
--DATE DATETIME NOT NULL,
--CUSTOMER_ID INT,
--CONSTRAINT FK_ORDER_CUST FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMER(ID)
--);

--CREATE TABLE PRODUCT(
--ID INT PRIMARY KEY,
--DESCRIPTION VARCHAR(100) NOT NULL,
--FINISH VARCHAR(50) NOT NULL,
--PRICE DECIMAL(9,2) NOT NULL,
--PRODUCT_LINE_ID INT NOT NULL,
--CHECK (FINISH IN ('череша', 'естествен ясен', 'бял ясен', 'червен дъб', 'естествен дъб', 'орех'))
--);

--CREATE TABLE ORDER_LINE(
--ORDER_ID INT NOT NULL,
--PRODUCT_ID INT NOT NULL,
--QUANTITY INT NOT NULL,
--CONSTRAINT FK_LINE_ORDER FOREIGN KEY(ORDER_ID) REFERENCES ORDER_T(ID),
--CONSTRAINT FK_LINE_PRODUCT FOREIGN KEY(PRODUCT_ID) REFERENCES PRODUCT(ID)
--);


--insert into CUSTOMER values
--('Иван Петров', 'ул. Лавеле 8', 'София', '1000'),
--('Камелия Янева', 'ул. Иван Шишман 3', 'Бургас', '8000'),
--('Васил Димитров', 'ул. Абаджийска 87', 'Пловдив', '4000'),
--('Ани Милева', 'бул. Владислав Варненчик 56', 'Варна','9000');
--insert into PRODUCT values
--(1000, 'офис бюро', 'череша', 195, 10),
--(1001, 'директорско бюро', 'червен дъб', 250, 10),
--(2000, 'офис стол', 'череша', 75, 20),
--(2001, 'директорски стол', 'естествен дъб', 129, 20),
--(3000, 'етажерка за книги', 'естествен ясен', 85, 30),
--(4000, 'настолна лампа', 'естествен ясен', 35, 40);
--insert into ORDER_T values
--(100, '2013-01-05', 1),
--(101, '2013-12-07', 2),
--(102, '2014-10-03', 3),
--(103, '2014-10-08', 2),
--(104, '2015-10-05', 1),
--(105, '2015-10-05', 4),
--(106, '2015-10-06', 2),
--(107, '2016-01-06', 1);
--insert into ORDER_LINE values
--(100, 4000, 1),
--(101, 1000, 2),
--(101, 2000, 2),
--(102, 3000, 1),
--(102, 2000, 1),
--(106, 4000, 1),
--(103, 4000, 1),
--(104, 4000, 1),
--(105, 4000, 1),
--(107, 4000, 1);


USE FURNITURECOMPANYDB;

--SELECT ID, DESCRIPTION, COUNT(PRODUCT_ID)
--FROM PRODUCT
--JOIN ORDER_LINE ON PRODUCT.ID = PRODUCT_ID
--GROUP BY ID, DESCRIPTION, PRODUCT_ID;

--SELECT ID, DESCRIPTION, ISNULL(SUM(QUANTITY),0) AS TOTAL
--FROM PRODUCT LEFT JOIN ORDER_LINE ON PRODUCT.ID = PRODUCT_ID
--GROUP BY ID, DESCRIPTION;

--SELECT NAME, SUM(PRICE*QUANTITY) AS TOTAL_ORDERED
--FROM CUSTOMER JOIN ORDER_T ON CUSTOMER.ID = CUSTOMER_ID
--JOIN ORDER_LINE ON ORDER_LINE.ORDER_ID = ORDER_T.ID
--JOIN PRODUCT ON PRODUCT_ID = PRODUCT.ID
--GROUP BY NAME, CUSTOMER.ID;



